{"version":3,"file":"static/js/849.07a7c02f.chunk.js","mappings":"8JACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,0B,mBCa/I,EAVmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAS,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACT,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAE3B,ECED,EARgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMO,SAI3C,E,6ECJKC,GAAcC,EAAAA,EAAAA,GAAiB,IAarC,GAAeC,EAAAA,EAAAA,GAAW,CAACC,KAAM,2BAAjC,EAXuB,SAACX,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACA,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUV,GAAcF,KAAK,iBAAiBa,YAAY,0BAGrG,0BAAK,yCAGZ,ICgCD,EAtCgB,SAACnB,GAGjB,IAAIoB,EAAiBpB,EAAMC,KAAKoB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAMJ,GAAIqB,EAAErB,IAApC,IAEzCsB,EAAmBxB,EAAMC,KAAKwB,SAASH,KAAI,SAAAI,GAAC,OAAK,SAAC,EAAD,CAASnB,QAASmB,EAAEnB,SAAzB,IAE3BP,EAAMC,KAAK0B,eAOhC,OAAoB,IAAjB3B,EAAM4B,QAAyB,SAAC,KAAD,CAAUvB,GAAM,YAI1C,iBAAKF,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACCgB,KAID,iBAAKjB,UAAWC,EAAAA,SAAhB,WACI,yBAAMoB,KACN,SAAC,EAAD,CAAgBZ,SAhBZ,SAACiB,GAClB7B,EAAM8B,YAAYD,EAAOF,eAC3B,SAsBA,E,8BCID,GAAeI,E,QAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KAjBkB,SAACC,GACnB,MAAO,CACHjC,KAAMiC,EAAMC,eAGnB,IACwB,SAACC,GACtB,MAAO,CAEHN,YAAa,SAACH,GACVS,GAASC,EAAAA,EAAAA,GAAmBV,GAC/B,EAER,IAED,CAGEW,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__-er-F\",\"dialogsItems\":\"Dialogs_dialogsItems__HkM4k\",\"messages\":\"Dialogs_messages__FbgSR\",\"message\":\"Dialogs_message__52PEF\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  \r\n  return   <div className={s.dialog + ' ' + s.active}>\r\n  <NavLink to={path}>{props.name}</NavLink> \r\n</div>\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}\r\n   \r\n      \r\n    </div>\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n       </div>\r\n\r\n        <div><button>Send</button></div>\r\n    </form>\r\n    )\r\n}\r\nexport default reduxForm ({form: \"dialog-add-message-form\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { updateNewMessageBodyCreator } from \"../../redux/store\";\r\nimport { sendMessageCreator } from \"../../redux/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\nlet dialogElements = props.path.dialogs.map(d => <DialogItem name={d.name} id={d.id} /> );\r\n\r\nlet messagesElements = props.path.messages.map(m  => <Message message={m.message} />);\r\n\r\nlet newMessageBody = props.path.newMessageBody;\r\n\r\n\r\nlet addNewMessage = (values) => {\r\n   props.sendMessage(values.newMessageBody)\r\n}\r\n\r\nif(props.isAuth === false) return <Navigate to = {\"/Login\"} />\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n            {dialogElements}\r\n              \r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport store from \"../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n// const DialogsContainer = () => {\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//             (state) => {\r\n//   ;\r\n//                 let onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageCreator());\r\n//                 }\r\n\r\n//                 let onNewMessageChange = (body) => {\r\n//                     store.dispatch(updateNewMessageBodyCreator(body));\r\n//                 }\r\n\r\n//                 return <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={onSendMessageClick} path={state.dialogsReducer} />\r\n//             }\r\n// }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        path: state.dialogsReducer,\r\n        \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      \r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","compose","withAuthRedirect","connect","state","dialogsReducer","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}